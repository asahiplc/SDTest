from PyQt5.QtCore import pyqtSignal, QObject, QThread
# import socket
import threading
import RPi.GPIO as GPIO

class ServingDobot(QObject):
    __default_instance = None
    dobot_req = pyqtSignal()

    @classmethod
    def default(cls):
        """returns default instance of LearningModel class."""
        if cls.__default_instance is None:
            cls.__default_instance = ServingDobot()
        return cls.__default_instance

    def __init__(self):
        QObject.__init__(self)
#        self.socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
#        self.socket.connect(('192.168.1.246', 8501))

        GPIO.setmode(GPIO.BCM)
        GPIO.setup(17, GPIO.IN, pull_up_down=GPIO.PUD_DOWN)
        GPIO.setup(19, GPIO.OUT)
        GPIO.output(19, GPIO.HIGH)

        self.is_waiting_req = True
        self.__waiting_dobot_req_thread = threading.Thread(target=self.waiting_dobot_req, daemon=True)
        self.__waiting_dobot_req_thread.start()

    def waiting_dobot_req(self):
        self.is_waiting_req = True
        print("--- Waiting ---")
        while self.is_waiting_req:
#            comand = "RD DM05000.U"
#            separator = "\r"
#            msg = comand + separator
#            self.socket.send(msg.encode("ascii"))

#            message = self.socket.recv(1024)
#            message = int(message)

            GPIO_input = GPIO.input(17)
            if GPIO_input == 1:
#            if message:
                self.dobot_req.emit()
                self.is_waiting_req = False
                print("!!! GPIO ON !!!")

    def sending_inspection_result(self, result, result_sw):
        if not self.is_waiting_req:
            if result_sw:
#                comand = "WR DM05001.U 00001"
#                separator = "\r"  # 区切り符号CRの16進数表記
#                msg = comand + separator
#                self.socket.send(msg.encode("ascii"))
#                self.socket.recv(1024)
                print(result)
                print(result_sw)
                print("!!! OK !!!")
                GPIO.output(19, GPIO.HIGH)

            else:
#                comand = "WR DM05001.U 00000"
#                separator = "\r"  # 区切り符号CRの16進数表記
#                msg = comand + separator
#                self.socket.send(msg.encode("ascii"))
#                self.socket.recv(1024)
                print(result)
                print(result_sw)
                print("!!! NG !!!")
                GPIO.output(19, GPIO.LOW)

            self.__waiting_dobot_req_thread = threading.Thread(target=self.waiting_dobot_req, daemon=True)
            self.__waiting_dobot_req_thread.start()



